# --------- Global Functions ---------------

global !p
def math():
	return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment():
	return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
	[x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
	return x != '0' and y != '0'
endglobal

# ---------- Environment -------------

snippet mk "Inline math" wA
\(${1}\)`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
  snip.rv = ' '
else:
  snip.rv = ''
`$2
endsnippet

snippet dm "Display math" wA
\[
  $1
\]
$0
endsnippet

# ---------- Logic Symbols -----------

context "math()"
snippet iff "if and only if" Ai
\iff
endsnippet

context "math()"
snippet => "implies" Ai
\implies
endsnippet

context "math()"
snippet <= "implied by" Ai
\impliedby
endsnippet

context "math()"
snippet /= "not equals" Ai
\neq
endsnippet

snippet surj "surjection (arrow)" i
\twoheadrightarrow
endsnippet

snippet inj "injection (arrow)" i
\hookrightarrow
endsnippet


# --------- Fractions --------------

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

snippet / "Fraction (visual)" i
\\frac{${VISUAL}}{$1}$0
endsnippet

# --------- Number Theory -------------

context "math()"
snippet gcd "Greatest common divisor" iA
\\gcd\left($1, $2\right)$0
endsnippet

context "math()"
snippet lcm "Least common multiple" iA
\\lcm\left($1, $2\right)$0
endsnippet

